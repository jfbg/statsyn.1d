LeoLib Version 0.9: a Fortran interface for interactive X-windows graphics.

OVERVIEW
This document describes the control routines necessary to open and close
a window, and similarly fundamental things.  It also describes how to
use the library with a fortran program.

USE WITH FORTRAN
All leolib commands should be called as fortran subroutines.  Note that
the names of all leolib commands begin with the letter L.  All
parameters passed to the commands are signed 32-bit integers unless 
specified otherwise.

In order to create a window for drawing in, use the linitializewindow
command.  It should be called before any other leolib commands as it
establishes a connection to the x-server.

To compile a fortran program which uses LeoLib, include the leolib.o
object file in the f77 command line, and the -lX11 switch.  So, to
compile a fortran program called winprog.f, the following command line
would work:
f77 -o winprog winprog.f leolib.o -lX11

THE COMMANDS

ldie -- no arguments
This closes the window gracefully, and shuts down leolib.  It also
frees the memory used by all of leolib's datastructures.

ldoit -- no arguments
This command flushes the output buffer, and repaints the screen,
insuring that all drawing commands up to this point will become
visible.

linitializewindow(width,height)
This command sets up leolib's data structures, and opens a window for
display.  The window should be width x height pixels in size, but there
is a small change that this will not be the case due to interference
from the window manager.  (Openwindows doesn't interfere.)  By default, the
window will appear in the top left corner of the screen.

linitfancywindow(width,height,windowname,iconname,origx,origy)
This command does the same as linitializewindow, but gives the user more
control.  Windowname and iconname should be strings.  Windowname will be
displayed in the title bar of the window, and iconname will be displayed when
the window gets iconized.  Origx, and origy allow the user to place the
starting position of the window on the screen.  (0,0) would put it in the
upper left hand corner.  Values are in absolute screen coordinates.

lscreentype(width,height,color,planes)
This command is the only command which can be successfully called before 
creating a window.  It returns the size of the default display screen in
pixels in width and height.  Color is set to 1 if the screen can display
color, or 0 for monochrome or gray-scale systems.  Planes returns the number
of bit-planes available for color mapping.  (A black and white system would
have 1 bit-plane; a 256 gray scale system would have 8 bit-planes, as would a
color system capable of displaying 256 colors simultaneously.)

lscreendump(filename)
This command dumps the contents of the present screen to a PostScript
file with the specified filename.  The dump will be black and white, as
if the program had been run on a monochrome system.

SEE ALSO
leolibdraw for drawing routines
leolibtext for text writing routines
leolibinp for user input routines
